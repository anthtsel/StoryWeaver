{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/ai-instance.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  promptDir: './prompts',\n  plugins: [\n    googleAI({\n      apiKey: process.env.GOOGLE_GENAI_API_KEY,\n    }),\n  ],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,WAAW;IACX,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,QAAQ,QAAQ,GAAG,CAAC,oBAAoB;QAC1C;KACD;IACD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/seed-story.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Generates an initial story seed based on the selected theme and arc type.\n *\n * - seedStory - A function that generates the initial story seed.\n * - SeedStoryInput - The input type for the seedStory function.\n * - SeedStoryOutput - The return type for the seedStory function.\n */\n\nimport { ai } from '@/ai/ai-instance';\nimport { z } from 'genkit';\n\nconst SeedStoryInputSchema = z.object({\n  theme: z.string().describe('The theme of the story (e.g., space, fantasy, horror).'),\n  arcType: z.string().describe('The desired story arc (e.g., hero-journey, romance).')\n});\nexport type SeedStoryInput = z.infer<typeof SeedStoryInputSchema>;\n\nconst SeedStoryOutputSchema = z.object({\n  storySeed: z.string().describe('The initial story seed generated based on the theme and arc type.'),\n  initialChoices: z.array(z.string()).optional().describe('Initial choices for the user to select from.'),\n});\nexport type SeedStoryOutput = z.infer<typeof SeedStoryOutputSchema>;\n\nexport async function seedStory(input: SeedStoryInput): Promise<SeedStoryOutput> {\n  return seedStoryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'seedStoryPrompt',\n  input: {\n    schema: z.object({\n      theme: z.string().describe('The theme of the story.'),\n      arcType: z.string().describe('The desired story arc (e.g., hero-journey, romance).')\n    }),\n  },\n  output: {\n    schema: z.object({\n      storySeed: z.string().describe('The initial story seed.'),\n      initialChoices: z.array(z.string()).describe('Three initial choices for the player.'),\n    }),\n  },\n  prompt: `You are a creative story writer crafting the opening to a choose-your-own-adventure.\n\nThe theme of the story is: {{{theme}}}\nThe desired story arc is: {{{arcType}}}\n\nWrite a compelling story seed that:\n- Is **300-450 words** long (roughly 2000-2800 characters)\n- Introduces a strong hook and an immersive setting relevant to the theme **and arc**.\n- Hints at the beginning of the {{{arcType}}} arc.\n- Builds suspense, mystery, or intrigue appropriate for the {{{arcType}}}.\n- Ends at a **clear decision point** that sets the player up to make a choice\n- Uses second-person perspective (\"you\")\n\nFollow the story seed with exactly **three distinct choices** for what the player could do next. Each choice must:\n- Be **concise** (max 8 words)\n- Lead to a **significantly different** outcome or direction\n- Reflect meaningful and believable decisions given the situation\n- Be suitable for the start of a {{{arcType}}} story\n\nExample choices for a fantasy story:\n- \"Open the glowing ancient tome\"\n- \"Sneak out of the library\"\n- \"Call for the headmaster\"`,\n\n});\n\nconst seedStoryFlow = ai.defineFlow<\n  typeof SeedStoryInputSchema,\n  typeof SeedStoryOutputSchema\n>(\n  {\n    name: 'seedStoryFlow',\n    inputSchema: SeedStoryInputSchema,\n    outputSchema: SeedStoryOutputSchema,\n  },\n  async input => {\n    const { output } = await prompt(input);\n\n    if (!output || !output.initialChoices || !Array.isArray(output.initialChoices) || output.initialChoices.length === 0) {\n      return {\n        storySeed: output?.storySeed || \"Your adventure begins...\",\n        initialChoices: [\n          \"Explore the surroundings\",\n          \"Continue forward\",\n          \"Go back\"\n        ]\n      };\n    }\n\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,uBAAuB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGA,MAAM,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAC1D;AAGO,eAAe,uCAAO,GAAP,UAAU,KAAqB;IACnD,OAAO,cAAc;AACvB;AAEA,MAAM,SAAS,2HAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC3B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC/B;IACF;IACA,QAAQ;QACN,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC/B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;QAC/C;IACF;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;2BAsBgB,CAAC;AAE5B;AAEA,MAAM,gBAAgB,2HAAA,CAAA,KAAE,CAAC,UAAU,CAIjC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAEhC,IAAI,CAAC,UAAU,CAAC,OAAO,cAAc,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,cAAc,KAAK,OAAO,cAAc,CAAC,MAAM,KAAK,GAAG;QACpH,OAAO;YACL,WAAW,QAAQ,aAAa;YAChC,gBAAgB;gBACd;gBACA;gBACA;aACD;QACH;IACF;IAEA,OAAO;AACT;;;IApEoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}