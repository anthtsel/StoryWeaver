{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/seed-story.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Generates an initial story seed based on the selected theme.\n *\n * - seedStory - A function that generates the initial story seed.\n * - SeedStoryInput - The input type for the seedStory function.\n * - SeedStoryOutput - The return type for the seedStory function.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst SeedStoryInputSchema = z.object({\n  theme: z.string().describe('The theme of the story (e.g., space, fantasy, horror).'),\n});\nexport type SeedStoryInput = z.infer<typeof SeedStoryInputSchema>;\n\nconst SeedStoryOutputSchema = z.object({\n  storySeed: z.string().describe('The initial story seed generated based on the theme.'),\n  initialChoices: z.array(z.string()).optional().describe('Initial choices for the user to select from.'),\n});\nexport type SeedStoryOutput = z.infer<typeof SeedStoryOutputSchema>;\n\nexport async function seedStory(input: SeedStoryInput): Promise<SeedStoryOutput> {\n  return seedStoryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'seedStoryPrompt',\n  input: {\n    schema: z.object({\n      theme: z.string().describe('The theme of the story.'),\n    }),\n  },\n  output: {\n    schema: z.object({\n      storySeed: z.string().describe('The initial story seed.'),\n      initialChoices: z.array(z.string()).describe('Three initial choices for the player.')\n    }),\n  },\n  prompt: `You are a creative story writer. Generate an engaging initial story seed based on the following theme: {{{theme}}}.\n\nThe story seed should:\n- Be approximately 150-200 words\n- Set up an intriguing situation with clear stakes\n- Establish a sense of atmosphere appropriate to the theme\n- End at a decision point where the player needs to make a choice\n- Be written in second person (\"you\")\n\nAfter the story seed, provide exactly three interesting initial choices for what the player could do next. Each choice should:\n- Be concise (no more than 8 words)\n- Lead the story in a different direction\n- Be clearly distinct from the other choices\n\nFor example, if the theme is \"western\", choices might be:\n- \"Enter the saloon\"\n- \"Follow the suspicious stranger\"\n- \"Check on your horse\"`,\n});\n\nconst seedStoryFlow = ai.defineFlow<\n  typeof SeedStoryInputSchema,\n  typeof SeedStoryOutputSchema\n>({\n  name: 'seedStoryFlow',\n  inputSchema: SeedStoryInputSchema,\n  outputSchema: SeedStoryOutputSchema,\n},\nasync input => {\n  const {output} = await prompt(input);\n  \n  // If the output doesn't include initialChoices, provide fallback choices\n  if (!output || !output.initialChoices || !Array.isArray(output.initialChoices) || output.initialChoices.length === 0) {\n    return {\n      storySeed: output?.storySeed || \"Your adventure begins...\",\n      initialChoices: [\n        \"Explore the surroundings\",\n        \"Continue forward\",\n        \"Go back\"\n      ]\n    };\n  }\n  \n  return output;\n});"],"names":[],"mappings":";;;;;IAuBsB","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-story-snippet.ts"],"sourcesContent":["// This file is generated by Firebase Studio.\n'use server';\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst GenerateStorySnippetInputSchema = z.object({\n  theme: z.string().describe('The theme of the story (e.g., space, fantasy, horror).'),\n  previousSnippets: z.array(z.string()).describe('An array of previous story snippets.'),\n  currentChoice: z.string().describe('The user\\'s current choice that influences the story.'),\n});\nexport type GenerateStorySnippetInput = z.infer<typeof GenerateStorySnippetInputSchema>;\n\nconst GenerateStorySnippetOutputSchema = z.object({\n  nextSnippet: z.string().describe('The next story snippet generated by the LLM.'),\n  nextChoices: z.array(z.string()).describe('The next set of choices for the user to pick from.')\n});\nexport type GenerateStorySnippetOutput = z.infer<typeof GenerateStorySnippetOutputSchema>;\n\nexport async function generateStorySnippet(input: GenerateStorySnippetInput): Promise<GenerateStorySnippetOutput> {\n  return generateStorySnippetFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStorySnippetPrompt',\n  input: {\n    schema: z.object({\n      theme: z.string().describe('The theme of the story.'),\n      previousSnippets: z.array(z.string()).describe('Previous story snippets.'),\n      currentChoice: z.string().describe('The user\\'s current choice.'),\n    }),\n  },\n  output: {\n    schema: z.object({\n      nextSnippet: z.string().describe('The next story snippet.'),\n      nextChoices: z.array(z.string()).describe('Three possible choices for the user to continue the story.')\n    }),\n  },\n  prompt: `You are an AI Dungeon Master, weaving a choose-your-own-adventure story.\n\nThe theme of the story is: {{{theme}}}\n\nPrevious story snippets:\n{{#each previousSnippets}}\n{{{this}}}\n{{/each}}\n\nThe user has chosen: {{{currentChoice}}}\n\nGenerate the next part of the story based on the user's choice. Your response must include:\n1. A story snippet (nextSnippet) that continues the narrative (150-200 words)\n2. Exactly three choices (nextChoices) for what the user could do next\n\nMake your story engaging and immersive. Write in second person (\"you\").`,\n});\n\nconst generateStorySnippetFlow = ai.defineFlow<\n  typeof GenerateStorySnippetInputSchema,\n  typeof GenerateStorySnippetOutputSchema\n>(\n  {\n    name: 'generateStorySnippetFlow',\n    inputSchema: GenerateStorySnippetInputSchema,\n    outputSchema: GenerateStorySnippetOutputSchema,\n  },\n  async input => {\n    try {\n      const {output} = await prompt(input);\n      \n      // Ensure we have a valid story snippet\n      if (!output || !output.nextSnippet || output.nextSnippet.trim() === '') {\n        console.error('Error: No valid story snippet returned from AI');\n        return {\n          nextSnippet: \"As you make your choice, the story continues...\",\n          nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n        };\n      }\n      \n      // Ensure we have valid nextChoices\n      if (!output.nextChoices || !Array.isArray(output.nextChoices) || output.nextChoices.length === 0) {\n        console.error('Error: No valid choices returned from AI');\n        return {\n          nextSnippet: output.nextSnippet,\n          nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n        };\n      }\n      \n      // Ensure we have exactly 3 choices\n      const choices = output.nextChoices.slice(0, 3);\n      while (choices.length < 3) {\n        choices.push([\"Explore further\", \"Look around\", \"Continue onward\"][choices.length]);\n      }\n      \n      console.log('Story snippet generated successfully:', {\n        snippetLength: output.nextSnippet.length,\n        choices: choices\n      });\n      \n      return {\n        nextSnippet: output.nextSnippet,\n        nextChoices: choices\n      };\n    } catch (error) {\n      console.error('Error in generateStorySnippetFlow:', error);\n      return {\n        nextSnippet: \"There was a glitch in your story. The adventure continues...\",\n        nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n      };\n    }\n  }\n);"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;IAmBvB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport {seedStory} from '@/ai/flows/seed-story';\nimport {generateStorySnippet} from '@/ai/flows/generate-story-snippet';\nimport {Button} from '@/components/ui/button';\nimport { Moon, Sun, Loader2 } from 'lucide-react';\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from '@/components/ui/card';\nimport {Select, SelectContent, SelectItem, SelectTrigger, SelectValue} from '@/components/ui/select';\nimport {ScrollArea} from '@/components/ui/scroll-area';\nimport {Separator} from '@/components/ui/separator';\n\nconst themes = ['space', 'fantasy', 'horror'];\n\nexport default function Home() {\n  const [theme, setTheme] = useState(themes[0]);\n  const [displayedSnippets, setDisplayedSnippets] = useState<string[]>([]);\n  const [storySnippets, setStorySnippets] = useState<string[]>([]);\n  const [choices, setChoices] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  \n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n  // useRef to track if the story has been initialized\n  const storyInitialized = useRef(false);\n\n  // Check system preference for dark mode on initial load\n  useEffect(() => {\n    const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    setIsDarkMode(prefersDarkMode);\n  }, []);\n\n  // Apply dark mode class when isDarkMode changes\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (isDarkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => setIsDarkMode(!isDarkMode);\n\n  // Initialize story based on selected theme\n  useEffect(() => {\n    const initializeStory = async () => {\n      // Only initialize the story if it hasn't been initialized yet\n      if (storyInitialized.current) {\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n      try {\n        const initialStory = await seedStory({theme});\n        \n        // Use AI-generated choices from seedStory if available, otherwise use fallback choices\n        const initialChoices = initialStory.initialChoices || ['Explore the surroundings', 'Continue forward', 'Go back'];\n        \n        setStorySnippets([initialStory.storySeed]);\n        setDisplayedSnippets([initialStory.storySeed]);\n        setChoices(initialChoices);\n        \n        // Set the ref to true after successful initialization\n        storyInitialized.current = true;\n        \n        console.log('Story initialized:', {\n          snippet: initialStory.storySeed,\n          choices: initialChoices\n        });\n      } catch (e: any) {\n        setError(e.message || 'Failed to seed story.');\n        console.error('Failed to seed story:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Call initializeStory only if it hasn't been initialized yet\n    if (!storyInitialized.current) {\n      initializeStory();\n    }\n  }, [theme]);\n\n  // Modified typewriter effect to handle updates more reliably\n  useEffect(() => {\n    if (storySnippets.length > 0 && \n       (displayedSnippets.length === 0 || storySnippets.length > displayedSnippets.length)) {\n      \n      // Get the latest snippet that needs to be displayed\n      const lastSnippetIndex = storySnippets.length - 1;\n      const newSnippet = storySnippets[lastSnippetIndex];\n      \n      // Create a temporary array that matches the current state but with placeholders for new content\n      let updatedSnippets = [...storySnippets.slice(0, lastSnippetIndex)];\n      \n      // Start with empty string for the new snippet\n      updatedSnippets.push('');\n      setDisplayedSnippets(updatedSnippets);\n      \n      // Animate the text\n      let currentText = '';\n      let index = 0;\n      const timer = setInterval(() => {\n        if (index < newSnippet.length) {\n          currentText = newSnippet.substring(0, index + 1);\n          updatedSnippets = [...storySnippets.slice(0, lastSnippetIndex), currentText];\n          setDisplayedSnippets(updatedSnippets);\n          index++;\n        } else {\n          clearInterval(timer);\n          setDisplayedSnippets([...storySnippets]);\n          console.log('Typewriter effect completed for snippet:', lastSnippetIndex);\n        }\n      }, 20); // Slightly faster typing for better UX\n      \n      return () => clearInterval(timer);\n    }\n  }, [storySnippets]);\n\n  // Auto-scroll to bottom when content changes\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n      const scrollElement = scrollAreaRef.current.querySelector('[data-radix-scroll-area-viewport]');\n      if (scrollElement) {\n        scrollElement.scrollTop = scrollElement.scrollHeight;\n      }\n    }\n  }, [displayedSnippets]);\n\n  const handleChoice = async (choice: string) => {\n    if(loading) {\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    console.log('User selected choice:', choice);\n    \n    // Add the user choice to the story right away\n    const choiceText = `You chose: ${choice}`;\n    setStorySnippets([...storySnippets, choiceText]);\n    \n    try {\n      const newSnippet = await generateStorySnippet({\n        theme,\n        previousSnippets: storySnippets,\n        currentChoice: choice,\n      });\n      \n      console.log('Generated new snippet:', {\n        snippetLength: newSnippet.nextSnippet.length,\n        choices: newSnippet.nextChoices\n      });\n      \n      // Only add the new snippet after the choice was displayed\n      setStorySnippets(prevSnippets => [...prevSnippets, newSnippet.nextSnippet]);\n      \n      // Set new choices, ensuring we always have an array\n      if (newSnippet.nextChoices && Array.isArray(newSnippet.nextChoices) && newSnippet.nextChoices.length > 0) {\n        setChoices(newSnippet.nextChoices);\n      } else {\n        // Fallback choices if API doesn't return any\n        setChoices(['Explore further', 'Talk to someone nearby', 'Change direction']);\n        console.warn('No choices returned from API, using fallback choices');\n      }\n    } catch (e: any) {\n      setError(e.message || 'Failed to generate next snippet.');\n      console.error('Failed to generate next snippet:', e);\n      \n      // Add an error message to the story\n      setStorySnippets(prevSnippets => [\n        ...prevSnippets, \n        \"There was a problem continuing your adventure. Please try again.\"\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleThemeChange = (newTheme: string) => {\n    storyInitialized.current = false;\n    setTheme(newTheme);\n    setStorySnippets([]);\n    setDisplayedSnippets([]);\n    setChoices([]);\n  };\n\n  return (\n    <div key={isDarkMode} className=\"flex flex-col items-center justify-center min-h-screen py-2 bg-background\">\n      {/* Dark Mode Toggle */}\n      <div className=\"absolute top-4 right-4\">\n        <Button\n          onClick={toggleDarkMode}\n          variant=\"ghost\"\n          className=\"w-9 p-0\"\n          aria-label=\"Toggle Dark Mode\"\n        >\n          {isDarkMode ? <Sun size={20} /> : <Moon size={20} />}\n          <span className=\"sr-only\">Toggle Dark Mode</span>\n        </Button>\n      </div>\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <Card className=\"w-full max-w-3xl mx-auto my-10 rounded-lg shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-semibold tracking-tight\">Story Weaver</CardTitle>\n            <CardDescription>Create your own adventure with AI.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <label htmlFor=\"theme\" className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                Select Theme:\n              </label>\n              <Select value={theme} onValueChange={handleThemeChange} disabled={loading}>\n                <SelectTrigger className=\"w-[180px]\" id=\"theme\">\n                  <SelectValue placeholder=\"Theme\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {themes.map((t) => (\n                    <SelectItem key={t} value={t}>\n                      {t.charAt(0).toUpperCase() + t.slice(1)}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <Separator />\n\n            {error && (\n              <div className=\"bg-destructive/15 text-destructive p-3 rounded-md text-sm\">\n                {error}\n              </div>\n            )}\n\n            <ScrollArea className=\"h-[300px] rounded-md border p-4\" ref={scrollAreaRef}>\n              {displayedSnippets.map((snippet, index) => (\n                <div key={index} className=\"mb-4 text-sm\">\n                  <p>{snippet}</p>\n                </div>\n              ))}\n              {loading && (\n                <div className=\"flex items-center justify-center py-2\">\n                  <Loader2 className=\"h-4 w-4 animate-spin mr-2\" />\n                  <span className=\"text-sm italic\">Generating story...</span>\n                </div>\n              )}\n            </ScrollArea>\n\n            <div className=\"flex flex-wrap justify-center gap-2 mt-4\">\n              {choices.length > 0 ? (\n                choices.map((choice) => (\n                  <Button \n                    key={choice} \n                    onClick={() => handleChoice(choice)} \n                    disabled={loading}\n                    className=\"m-1\"\n                  >\n                    {choice}\n                  </Button>\n                ))\n              ) : (\n                !loading && storyInitialized.current && (\n                  <div className=\"text-center text-muted-foreground italic\">\n                    The story has reached its conclusion.\n                  </div>\n                )\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}