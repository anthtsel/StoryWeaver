{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/ai-instance.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  promptDir: './prompts',\n  plugins: [\n    googleAI({\n      apiKey: process.env.GOOGLE_GENAI_API_KEY,\n    }),\n  ],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,WAAW;IACX,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,QAAQ,QAAQ,GAAG,CAAC,oBAAoB;QAC1C;KACD;IACD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/seed-story.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Generates an initial story seed based on the selected theme.\n *\n * - seedStory - A function that generates the initial story seed.\n * - SeedStoryInput - The input type for the seedStory function.\n * - SeedStoryOutput - The return type for the seedStory function.\n */\n\nimport { ai } from '@/ai/ai-instance';\nimport { z } from 'genkit';\n\nconst SeedStoryInputSchema = z.object({\n  theme: z.string().describe('The theme of the story (e.g., space, fantasy, horror).'),\n});\nexport type SeedStoryInput = z.infer<typeof SeedStoryInputSchema>;\n\nconst SeedStoryOutputSchema = z.object({\n  storySeed: z.string().describe('The initial story seed generated based on the theme.'),\n  initialChoices: z.array(z.string()).optional().describe('Initial choices for the user to select from.'),\n});\nexport type SeedStoryOutput = z.infer<typeof SeedStoryOutputSchema>;\n\nexport async function seedStory(input: SeedStoryInput): Promise<SeedStoryOutput> {\n  return seedStoryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'seedStoryPrompt',\n  input: {\n    schema: z.object({\n      theme: z.string().describe('The theme of the story.'),\n    }),\n  },\n  output: {\n    schema: z.object({\n      storySeed: z.string().describe('The initial story seed.'),\n      initialChoices: z.array(z.string()).describe('Three initial choices for the player.'),\n    }),\n  },\n  prompt: `You are a creative story writer crafting the opening to a choose-your-own-adventure.\n\nThe theme of the story is: {{{theme}}}\n\nWrite a compelling story seed that:\n- Is **300-450 words** long (roughly 2000-2800 characters)\n- Introduces a strong hook and an immersive setting\n- Builds suspense, mystery, or intrigue\n- Ends at a **clear decision point** that sets the player up to make a choice\n- Uses second-person perspective (\"you\")\n\nFollow the story seed with exactly **three distinct choices** for what the player could do next. Each choice must:\n- Be **concise** (max 8 words)\n- Lead to a **significantly different** outcome or direction\n- Reflect meaningful and believable decisions given the situation\n\nExample choices for a fantasy story:\n- \"Open the glowing ancient tome\"\n- \"Sneak out of the library\"\n- \"Call for the headmaster\"`,\n\n});\n\nconst seedStoryFlow = ai.defineFlow<\n  typeof SeedStoryInputSchema,\n  typeof SeedStoryOutputSchema\n>(\n  {\n    name: 'seedStoryFlow',\n    inputSchema: SeedStoryInputSchema,\n    outputSchema: SeedStoryOutputSchema,\n  },\n  async input => {\n    const { output } = await prompt(input);\n\n    if (!output || !output.initialChoices || !Array.isArray(output.initialChoices) || output.initialChoices.length === 0) {\n      return {\n        storySeed: output?.storySeed || \"Your adventure begins...\",\n        initialChoices: [\n          \"Explore the surroundings\",\n          \"Continue forward\",\n          \"Go back\"\n        ]\n      };\n    }\n\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,uBAAuB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,MAAM,wBAAwB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAC1D;AAGO,eAAe,uCAAO,GAAP,UAAU,KAAqB;IACnD,OAAO,cAAc;AACvB;AAEA,MAAM,SAAS,2HAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC7B;IACF;IACA,QAAQ;QACN,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC/B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;QAC/C;IACF;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;2BAmBgB,CAAC;AAE5B;AAEA,MAAM,gBAAgB,2HAAA,CAAA,KAAE,CAAC,UAAU,CAIjC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAEhC,IAAI,CAAC,UAAU,CAAC,OAAO,cAAc,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,cAAc,KAAK,OAAO,cAAc,CAAC,MAAM,KAAK,GAAG;QACpH,OAAO;YACL,WAAW,QAAQ,aAAa;YAChC,gBAAgB;gBACd;gBACA;gBACA;aACD;QACH;IACF;IAEA,OAAO;AACT;;;IAhEoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-story-snippet.ts"],"sourcesContent":["// This file is generated by Firebase Studio.\n'use server';\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst GenerateStorySnippetInputSchema = z.object({\n  theme: z.string().describe('The theme of the story (e.g., space, fantasy, horror).'),\n  previousSnippets: z.array(z.string()).describe('An array of previous story snippets.'),\n  currentChoice: z.string().describe(\"The user's current choice that influences the story.\"),\n});\nexport type GenerateStorySnippetInput = z.infer<typeof GenerateStorySnippetInputSchema>;\n\nconst GenerateStorySnippetOutputSchema = z.object({\n  nextSnippet: z.string().describe('The next story snippet generated by the LLM.'),\n  nextChoices: z.array(z.string()).describe('The next set of choices for the user to pick from.')\n});\nexport type GenerateStorySnippetOutput = z.infer<typeof GenerateStorySnippetOutputSchema>;\n\nexport async function generateStorySnippet(input: GenerateStorySnippetInput): Promise<GenerateStorySnippetOutput> {\n  return generateStorySnippetFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateStorySnippetPrompt',\n  input: {\n    schema: z.object({\n      theme: z.string().describe('The theme of the story.'),\n      previousSnippets: z.array(z.string()).describe('Previous story snippets.'),\n      currentChoice: z.string().describe(\"The user's current choice.\"),\n    }),\n  },\n  output: {\n    schema: z.object({\n      nextSnippet: z.string().describe('The next story snippet.'),\n      nextChoices: z.array(z.string()).describe('Three possible choices for the user to continue the story.')\n    }),\n  },\n  prompt: `You are an AI Dungeon Master, weaving a choose-your-own-adventure story.\n\nThe theme of the story is: {{{theme}}}\n\nPrevious story snippets:\n{{#each previousSnippets}}\n{{{this}}}\n{{/each}}\n\nThe user has chosen: {{{currentChoice}}}\n\nGenerate the next part of the story based on the user's choice. Your response must include:\n1. A story snippet (nextSnippet) that continues the narrative using **300-450words** (approximately 2000-2800 characters). \n2. Exactly three choices (nextChoices) for what the user could do next.\n\nMake your story engaging and immersive. Use vivid imagery, sensory detail, and write in second person (\"you\"). Build tension or wonder as appropriate to the theme.`,\n});\n\nconst generateStorySnippetFlow = ai.defineFlow<\n  typeof GenerateStorySnippetInputSchema,\n  typeof GenerateStorySnippetOutputSchema\n>(\n  {\n    name: 'generateStorySnippetFlow',\n    inputSchema: GenerateStorySnippetInputSchema,\n    outputSchema: GenerateStorySnippetOutputSchema,\n  },\n  async input => {\n    try {\n      const { output } = await prompt(input);\n\n      if (!output || !output.nextSnippet || output.nextSnippet.trim() === '') {\n        console.error('Error: No valid story snippet returned from AI');\n        return {\n          nextSnippet: \"As you make your choice, the story continues...\",\n          nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n        };\n      }\n\n      if (!output.nextChoices || !Array.isArray(output.nextChoices) || output.nextChoices.length === 0) {\n        console.error('Error: No valid choices returned from AI');\n        return {\n          nextSnippet: output.nextSnippet,\n          nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n        };\n      }\n\n      const choices = output.nextChoices.slice(0, 3);\n      while (choices.length < 3) {\n        choices.push([\"Explore further\", \"Look around\", \"Continue onward\"][choices.length]);\n      }\n\n      console.log('Story snippet generated successfully:', {\n        snippetLength: output.nextSnippet.length,\n        choices: choices\n      });\n\n      return {\n        nextSnippet: output.nextSnippet,\n        nextChoices: choices\n      };\n    } catch (error) {\n      console.error('Error in generateStorySnippetFlow:', error);\n      return {\n        nextSnippet: \"There was a glitch in your story. The adventure continues...\",\n        nextChoices: ['Explore further', 'Talk to someone nearby', 'Change direction']\n      };\n    }\n  }\n);\n"],"names":[],"mappings":"AAAA,6CAA6C;;;;;;AAG7C;AACA;AAAA;;;;;;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IAC/C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAGA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAC5C;AAGO,eAAe,uCAAkB,GAAlB,qBAAqB,KAAgC;IACzE,OAAO,yBAAyB;AAClC;AAEA,MAAM,SAAS,2HAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC3B,kBAAkB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;YAC/C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;QACrC;IACF;IACA,QAAQ;QACN,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACf,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;YACjC,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;QAC5C;IACF;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;mKAewJ,CAAC;AACpK;AAEA,MAAM,2BAA2B,2HAAA,CAAA,KAAE,CAAC,UAAU,CAI5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;QAEhC,IAAI,CAAC,UAAU,CAAC,OAAO,WAAW,IAAI,OAAO,WAAW,CAAC,IAAI,OAAO,IAAI;YACtE,QAAQ,KAAK,CAAC;YACd,OAAO;gBACL,aAAa;gBACb,aAAa;oBAAC;oBAAmB;oBAA0B;iBAAmB;YAChF;QACF;QAEA,IAAI,CAAC,OAAO,WAAW,IAAI,CAAC,MAAM,OAAO,CAAC,OAAO,WAAW,KAAK,OAAO,WAAW,CAAC,MAAM,KAAK,GAAG;YAChG,QAAQ,KAAK,CAAC;YACd,OAAO;gBACL,aAAa,OAAO,WAAW;gBAC/B,aAAa;oBAAC;oBAAmB;oBAA0B;iBAAmB;YAChF;QACF;QAEA,MAAM,UAAU,OAAO,WAAW,CAAC,KAAK,CAAC,GAAG;QAC5C,MAAO,QAAQ,MAAM,GAAG,EAAG;YACzB,QAAQ,IAAI,CAAC;gBAAC;gBAAmB;gBAAe;aAAkB,CAAC,QAAQ,MAAM,CAAC;QACpF;QAEA,QAAQ,GAAG,CAAC,yCAAyC;YACnD,eAAe,OAAO,WAAW,CAAC,MAAM;YACxC,SAAS;QACX;QAEA,OAAO;YACL,aAAa,OAAO,WAAW;YAC/B,aAAa;QACf;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO;YACL,aAAa;YACb,aAAa;gBAAC;gBAAmB;gBAA0B;aAAmB;QAChF;IACF;AACF;;;IAvFoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}